import asyncio

from dotenv import load_dotenv

from src.entity.UsersData import Users
from src.utils import functions as util

load_dotenv()


class port443:
    ############# set up variable #######################################################
    userLogin = False
    host = "antoineHackerLord.com"
    HTML = '''
    <!DOCTYPE html>
       <html lang="en">
         <head>
           <meta charset="UTF-8">
           <meta name="viewport" content="width=device-width, initial-scale=1.0">
           <meta http-equiv="X-UA-Compatible" content="ie=edge">
           <link rel="stylesheet" href="style.css">
           <title>On Includes</title>
         </head>
         <body>
           <script src="script.js"></script>
            <!-- you can open file script.js and style.css -->
           <h1>My Life as Terror</h1>
           <p>The greater the suffer, the greater the piece.</p>
           <br>
           <p> Source: EHC </p>
           <button type="button" onclick="greetings();">Say hello</button>
         </body>
       </html>
    '''
    CSS = '''
    body {
        background-color: lightblue;
        /* at_aga1n */
          }'''
    JS = '''function detonate()
     {
       alert("Self destructed!")
     }'''
    YOUTUBE = 'NB2HI4DTHIXS653XO4XHS33VOR2WEZJOMNXW2L3XMF2GG2B7OY6WIULXGR3TSV3HLBRVC==='
    WEBSITE = 'antoineHackerLord.com'
    FINALE = """
    - COMPLETED ATTACKS: 
        +) 11/09/2001: Suicide terrorist attack in the US
        +) 08/03/2014: MH370 DISAPPEARED
        +) 13/11/2015: Bomb in Paris, France
        +) 26/09/2016: Uber's biggest breach
        +) 12/05/2017: Distribute ransomware WannaCry 
    - PLANNING ATTACKS: 
        +) ??/??/????: FPT UNIVERSITY (FOR SECURITY REASON ONLY SHOW THE ENCODED DATE)"""
    PASSWORD = 'picoctf'
    user = 'shine102'

    ##################################################################################################
    def __init__(self):
        pass

    async def loginCheck(self, ctx):
        await ctx.send("H√£y nh·∫≠p m·∫≠t kh·∫©u: ")

        def check(msg):  # check if the information come from the same person
            return msg.author == ctx.author and msg.channel == ctx.channel

        try:
            # take user input with 'message' placeholder
            password = await ctx.bot.wait_for('message', check=check, timeout=60.0)
            # after this password is like an object that have lots of attributes, so we need to access the
            # content of it
        except TimeoutError:
            # if over 60 seconds then kick
            Users.users[ctx.author.id].Login = False
            await ctx.send(
                util.syntaxHighlight("B·∫°n kh√¥ng nh·∫≠p m·∫≠t kh·∫©u trong 1 kho·∫£ng th·ªùi gian, t·ª± ƒë·ªông ƒëƒÉng xu·∫•t", "fix"))
            return

        if password.content == self.PASSWORD:  # same pass
            port443.userLogin = True
            Users.users[ctx.author.id].Login = True
            await ctx.send(util.syntaxHighlight(f"ƒêƒÉng nh·∫≠p t·ªõi {self.host} qua port 443 th√†nh c√¥ng\n", ""))
            await asyncio.sleep(2)
            await ctx.send(
                embed=util.embedColor("- H√£y nh·ªõ r·∫±ng m·ªói c√¢u l·ªánh ƒë·ªÅu b·∫Øt ƒë·∫ßu b·∫±ng $ -", "diff", "PREFIX REMINDER"))
            await asyncio.sleep(2)
            await ctx.send(embed=util.embedColor(
                "- Khi k·∫øt n·ªëi t·ªõi host, b·∫°n n√™n s·ª≠ d·ª•ng l·ªánh $ls ƒë·ªÉ hi·ªán c√°c file c√≥ trong th∆∞ m·ª•c hi·ªán t·∫°i -",
                'diff', 'PORT 443'))
            return
        else:
            Users.users[ctx.author.id].Login = False
            await ctx.send(embed=util.embedColor("- Sai m·∫≠t kh·∫©u, h√£y k·∫øt n·ªëi v√† th·ª≠ l·∫°i -", "diff", "ERROR"))
            return

    async def listAllFile(self, ctx):
        await ctx.send(
            util.syntaxHighlight("1. base.html\n2. script.js\n3. style.css\n4. antoineHackerLordTest.txt\n", ""))
        await asyncio.sleep(2)
        await ctx.send(embed=util.embedColor(
            "ƒê·ªÉ th·∫•y ƒë∆∞·ª£c n·ªôi dung c·ªßa c√°c file, h√£y s·ª≠ d·ª•ng l·ªánh cat: $cat file_name", 'diff', 'CAT COMMAND'))

    async def cat(self, ctx, fileName: str):
        Users.users[ctx.author.id].Login = True
        if fileName == 'base.html':
            await ctx.send(embed=util.embedColor(self.HTML, "html", "FILE: base.html"))
        elif fileName == 'script.js':
            await ctx.send(embed=util.embedColor(self.JS, "js", "FILE: script.js"))
        elif fileName == 'style.css':
            await ctx.send(embed=util.embedColor(self.CSS, "css", "FILE: style.css"))
            await asyncio.sleep(2)
            string = '''Ch√∫c m·ª´ng, b·∫°n ƒë√£ t√¨m th·∫•y Key c·ªßa ƒë·∫ßu ƒë·∫°n. Nh·ªØng ƒë·∫∑c v·ª• kh√°c c≈©ng ƒë√£ bi·∫øt ƒë·ªãa ƒëi·ªÉm t·∫•n c√¥ng nh∆∞ng ch√∫ng ta v·∫´n lo l·∫Øng r·∫±ng ch∆∞a bi·∫øt th·ªùi gian b·∫Øt ƒë·∫ßu t·∫•n c√¥ng m√† h·∫Øn ch·ªçn s·∫Ω di·ªÖn ra bao gi·ªù.\nNhi·ªám v·ª• cu·ªëi c√πng c·ªßa b·∫°n l√† t√¨m file t√†i li·ªáu ch·ª©a th√¥ng tin v·ªÅ th·ªùi gian s·∫Ω di·ªÖn ra cu·ªôc t·∫•n c√¥ng v√† b√°o c√°o l·∫°i.\nC√ÅCH N·ªòP KEY V√Ä Th·ªùi gian: EHC{key_DD/MM/YYYY}'''
            await ctx.send(embed=util.embedColor(string, "", "FINAL MISSION"))
            await asyncio.sleep(2)
            string = "Theo nh∆∞ th√¥ng tin qu√©t ƒë∆∞·ª£c c·ªßa si√™u m√°y t√≠nh th√¨ n√≥ c√≥ th·ªÉ b·ªã ·∫©n ·ªü ƒë∆∞·ªùng d·∫´n hi·ªán t·∫°i. H√£y ki·ªÉm tra n√≥.\nNh·ªõ r·∫±ng b·∫°n ch·ªâ c√≤n 5 ph√∫t tr∆∞·ªõc khi Antoine ph√°t ƒë·ªông t·∫•n c√¥ng. Good luck !\n(P/s: C√°i n√†yc c√≥ th·ªÉ gi√∫p √≠ch: https://devconnected.com/how-to-show-hidden-files-on-linux/. Nh∆∞ng m√† c√¢u l·ªánh l√†: $ls -a üòú)"
            await ctx.send(embed=util.embedColor(string, "", "HINT FOR YOU"))
        elif fileName == 'antoineHackerLordTest.txt':
            await ctx.send(embed=util.embedColor("YOU ARE LATE", "", "FILE: antoineHackerLordTest.txt"))
            await asyncio.sleep(2)
            await ctx.send(util.syntaxHighlight("Kh√¥ng ·ªïn, th·ªùi gian s·∫Øp h·∫øt, b·∫°n ph·∫£i nhanh l√™n!!!!!", ""))
        elif fileName == '.secret.txt':
            await ctx.send(embed=util.embedColor(self.YOUTUBE, "", "FILE: .secret.txt"))
            await asyncio.sleep(2)
            await ctx.send(
                util.syntaxHighlight(
                    "L·∫°i 1 lo·∫°i m√£ h√≥a kh√°c. Ph√¢n t√≠ch cho th·∫•y n√≥ gi·ªëng nh∆∞ Base64 nh∆∞ng kh√¥ng ph·∫£i. C√≥ l·∫Ω, Base 64/2=? ",
                    ""))
        elif fileName == '.nothing_special_here.txt':
            await ctx.send(embed=util.embedColor(self.FINALE, "", "FILE: .nothing_special_here.txt"))
            # await ctx.send(file=discord.File('QRCODE.png'))
            #
            # await ctx.send(util.syntaxHighlight(
            #     "H√¨nh ·∫£nh n√†y th·∫≠t l√† k√¨ l·∫°, ƒë·∫øn si√™u m√°y t√≠nh kh√¥ng th·ªÉ ph√¢n t√≠ch ƒë∆∞·ª£c n√≥, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng Google Lens ƒë·ªÉ t√¨m hi·ªÉu th√™m.\nƒê√£ g·∫ßn ƒë·∫øn h·ªìi k·∫øt c·ªßa nhi·ªám v·ª• n√†y r·ªìi, ch√∫ng t√¥i kh√¥ng th·ªÉ tr·ª£ gi√∫p ƒë∆∞·ª£c g√¨ th√™m, h√£y n·ªôp Key v√† ƒë·ªãa ƒëi·ªÉm ƒë·ªÉ tho√°t kh·ªèi k·∫ø ho·∫°ch c·ªßa h·∫Øn n√†o",
            #     ""))
            await asyncio.sleep(2)
            await ctx.send(
                embed=util.embedColor("L√∫c b·∫Øt ƒë·∫ßu c≈©ng s·∫Ω l√† l√∫c m·ªçi th·ª© ch·∫•m d·ª©t, h√£y ch·∫•p nh·∫≠n ƒëi. TAO ƒê√É TH·∫ÆNG",
                                      "diff", "REVENGE"))
            await asyncio.sleep(3)
            await ctx.send(util.syntaxHighlight(
                "√îi kh√¥ng, sao ta l·∫°i kh√¥ng nghƒ© ra, th·ªùi gian t·∫•n c√¥ng s·∫Ω r∆°i v√†o l√∫c th√†nh l·∫≠p c·ªßa EHC, b·∫°n h√£y t√¨m n√≥ ...., t√¨m l·∫•.....\nLINK RETURN: https://www.facebook.com/ehc.fptu",
                ""))
        else:
            await ctx.send(embed=util.embedColor("- Kh√¥ng file n√†o nh∆∞ v·∫≠y t·ªìn t·∫°i - ", "diff", "ERROR"))
        return

    async def listAllHiddenFile(self, ctx):
        await ctx.send(util.syntaxHighlight(
            "1. base.html\n2. script.js\n3. style.css\n4. antoineHackerLordTest.txt\n5. .secret.txt\n6. .nothing_special_here.txt",
            ""))
        await asyncio.sleep(2)
        await ctx.send(embed=util.embedColor(
            "ƒê·ªÉ th·∫•y ƒë∆∞·ª£c n·ªôi dung c·ªßa c√°c file, h√£y s·ª≠ d·ª•ng l·ªánh cat: $cat file_name", 'diff', 'CAT COMMAND'))
