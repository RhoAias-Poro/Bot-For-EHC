from dotenv import load_dotenv

from src.utils import functions as util

load_dotenv()


class port80:
    normalUser = False
    rootUser = False
    ROOT_PASS = "tryhackme"
    DECODE_NORMAL_PASS = "hackthebox"
    ENCODE_NORMAL_PASS = "gelunpxzr"
    UPDATE_ROOT_ENCODE_PASS = "cG9zdHN3aWdnZXI="
    UPDATE_ROOT_DECODE_PASS = "postswigger"
    host = "antoine@192.168.0.0"
    BREAK_FILE = "linkToNuclearWeapon.txt"

    def __init__(self):
        pass

    async def loginCheck(self, ctx):
        await ctx.send(util.syntaxHighlight("H√£y nh·∫≠p m·∫≠t kh·∫©u: ", ""))

        def check(msg):  # check if the information come from the same person
            return msg.author == ctx.author and msg.channel == ctx.channel

        try:
            # take user input with 'message' placeholder
            password = await ctx.bot.wait_for('message', check=check, timeout=60.0)
            # after this password is like an object that have lots of attributes, so we need to access the
            # content of it
        except TimeoutError:
            # if over 60 seconds then kick
            await ctx.send(
                util.syntaxHighlight("B·∫°n kh√¥ng nh·∫≠p m·∫≠t kh·∫©u trong 1 kho·∫£ng th·ªùi gian, t·ª± ƒë·ªông ƒëƒÉng xu·∫•t", "fix"))
            return False

        if password.content == self.DECODE_NORMAL_PASS:  # same pass
            await ctx.send(util.syntaxHighlight(f"ƒêƒÉng nh·∫≠p t·ªõi {self.host} port 80 nh∆∞ normal user th√†nh c√¥ng\n", ""))
            await ctx.send(embed=util.embedColor(
                "- Khi k·∫øt n·ªëi t·ªõi host, b·∫°n n√™n s·ª≠ d·ª•ng l·ªánh $ls ƒë·ªÉ hi·ªán c√°c file c√≥ trong th∆∞ m·ª•c hi·ªán t·∫°i -",
                'diff', 'PORT 80'))
            port80.normalUser = True
            return True
        elif password.content == self.ENCODE_NORMAL_PASS:
            await ctx.send(embed=util.embedColor(
                "- M·∫≠t kh·∫©u ƒë√£ b·ªã m√£ h√≥a theo d·∫°ng ROT13\nH√£y k·∫øt n·ªëi l·∫°i v·ªõi m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c gi·∫£i m√£ -",
                "", "WARNING"))
            return False
        elif password.content == self.ROOT_PASS:
            await ctx.send(util.syntaxHighlight(f"ƒêƒÉng nh·∫≠p t·ªõi {self.host} port 80 nh∆∞ root user th√†nh c√¥ng\n", ""))
            await ctx.send(embed=util.embedColor(
                "- Khi ƒë√£ c√≥ quy·ªÅn h·∫°n c·ªßa root user, b·∫°n n√™n s·ª≠ d·ª•ng l·ªánh $ls l·∫°i ƒë·ªÉ c√≥ th·ªÉ nh√¨n th·∫•y c√°c file m√† t·ª´ng b·ªã ·∫©n ƒëi v√¨ kh√¥ng ƒë·ªß quy·ªÅn h·∫°n -",
                'diff', 'PORT 80'))
            port80.rootUser = True
            return True
        elif password.content == self.UPDATE_ROOT_ENCODE_PASS:
            await ctx.send(embed=util.embedColor(
                "- M·∫≠t kh·∫©u m·ªõi ƒë√£ b·ªã m√£ h√≥a theo d·∫°ng BASE64, n√≥ ho√†n to√†n kh√°c v·ªõi ROT13\nH√£y k·∫øt n·ªëi l·∫°i v·ªõi m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c gi·∫£i m√£ -",
                "fix", "WARNING"))
            return False
        else:
            await ctx.send(
                embed=util.embedColor("- Sai m·∫≠t kh·∫©u, xin h√£y k·∫øt n·ªëi l·∫°i v·ªõi m·∫≠t kh·∫©u ƒë√∫ng -", "diff", "ERROR"))
            return False

    async def listAllFile(self, ctx):
        if self.normalUser:
            await ctx.send(util.syntaxHighlight("1. key1.txt\n2. rootPassword.txt\n", ""))
            await ctx.send(embed=util.embedColor(
                "ƒê·ªÉ th·∫•y ƒë∆∞·ª£c n·ªôi dung c·ªßa c√°c file, h√£y s·ª≠ d·ª•ng l·ªánh cat: $cat file_name", 'diff', 'CAT COMMAND'))
        if self.rootUser:
            await ctx.send(util.syntaxHighlight(
                "1. key1.txt\n2. rootPassword.txt\n3. FullKey.txt\n4. Key2.txt\n5. linkToNuclearWeapon.txt\n", ""))
            await ctx.send(embed=util.embedColor(
                "ƒê·ªÉ th·∫•y ƒë∆∞·ª£c n·ªôi dung c·ªßa c√°c file, h√£y s·ª≠ d·ª•ng l·ªánh cat: $cat file_name", 'diff', 'CAT COMMAND'))

    async def printFile(self, ctx, fileName: str):
        if fileName == 'key1.txt':
            await ctx.send(embed=util.embedColor("EHC{IA-", "", "FILE: key1.txt"))
            await ctx.send(util.syntaxHighlight(
                "ƒê√¢y l√† 1/3 key, c·ªë l√™n üî•üî•üî•", ""))
        elif fileName == "rootPassword.txt":
            await ctx.send(embed=util.embedColor("tryhackme", "", "FILE: rootPassword.txt"))
            await ctx.send(util.syntaxHighlight(
                "ƒê√¢y l√† m·∫≠t kh·∫©u c·ªßa t√†i kho·∫£n quy·ªÅn root, h√£y ƒëƒÉng nh·∫≠p l·∫°i v·ªõi m·∫≠t kh·∫©u n√†y ƒë·ªÉ c√≥ quy·ªÅn l·ª£i cao h∆°n, ƒë·ªÉ tho√°t b·∫°n c√≥ th·ªÉ d√πng l·ªánh $exit",
                ""))
            return True
        elif self.rootUser:
            if fileName == 'FullKey.txt':
                await ctx.send(embed=util.embedColor("EHC{try-your-best}", "", "FILE: FullKey.txt"))
                await ctx.send(util.syntaxHighlight(
                    "Th·∫≠t gi·ªëng v·ªõi Key m√† ch√∫ng ta t√¨m, nh∆∞ng c√≥ g√¨ ƒë√≥ kh√¥ng ƒë√∫ng l·∫Øm", ""))
            elif fileName == 'Key2.txt':
                await ctx.send(embed=util.embedColor("-IS-", "", "FILE: Key2.txt"))
                await ctx.send(util.syntaxHighlight(
                    "Ch√∫ng ta ƒë√£ t√¨m ƒë∆∞·ª£c 2/3 Key r·ªìi h√£y t√¨m n·ªët m·∫£nh c√≤n l·∫°i n√†o", ""))
            elif fileName == 'linkToNuclearWeapon.txt':
                await ctx.send(embed=util.embedColor("antoineHackerLord.com\nuser: shine102\npassword: picoctf", "",
                                                     "FILE: linkToNuclearWeapon.txt"))
                await ctx.send(util.syntaxHighlight(
                    "1 website xu·∫•t hi·ªán, tr√¥ng th·∫≠t ƒë√°ng nghi, b·∫°n h√£y $scan ƒë·ªÉ t√¨m c√°ch k·∫øt n·ªëi t·ªõi n√≥ tr∆∞·ªõc", ""))
        else:
            await ctx.send(embed=util.embedColor("- Kh√¥ng c√≥ file n√†o nh∆∞ v·∫≠y t·ªìn t·∫°i - ", "diff", "ERROR"))
        return True

    async def cat(self, ctx, fileName: str):
        if fileName == self.BREAK_FILE and self.ROOT_PASS == "tryhackme":
            port80.ROOT_PASS = self.UPDATE_ROOT_DECODE_PASS
            string = "M√°y t√≠nh nh·∫≠n ra s·ª± x√¢m ph·∫°m tr√°i ph√©p, t·ª± ƒë·ªông th·ª±c hi·ªán giao th·ª©c tr·ª•c xu·∫•t v√† thay ƒë·ªïi m·∫≠t kh·∫©u c·ªßa root user."
            await ctx.send(embed=util.embedColor(string, "", "WARNING"))
            await ctx.send(util.syntaxHighlight(
                "Kh√¥ng hay r·ªìi, ch√∫ng ta s·∫Ω ph·∫£i quay l·∫°i n∆°i l∆∞u tr·ªØ m·∫≠t kh·∫©u thay ƒë·ªïi v·∫≠y, theo nh∆∞ m√°y t√≠nh qu√©t th√¨ n√≥ n·∫±m ·ªü port 22, h√£y ƒë·∫øn ƒë√≥ v√† l·∫•y m·∫≠t kh·∫©u thay ƒë·ªïi",
                ""))
            return False
        return await self.printFile(ctx, fileName)
